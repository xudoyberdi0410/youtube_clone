# Docker-based CI/CD workflow for Next.js app
name: Docker CI/CD

on:
  push:
    branches: ["master", "main"]
  pull_request:
    branches: ["master", "main"]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build and test job using Docker
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker image (development)
        run: |
          docker build --target base -t youtube-clone:dev .
          
      - name: Run tests in Docker (if available)
        run: |
          # You can add test commands here
          echo "No tests configured yet"
          
      - name: Build production version in Docker
        run: |
          docker build --target prerelease -t youtube-clone:build .
          
      - name: Verify build output
        run: |
          # Check if the build created the out directory
          docker run --rm youtube-clone:build ls -la out/
          
      - name: Extract built files for deployment
        run: |
          # Create a container from the built image
          docker create --name temp-container youtube-clone:build
          # Copy the built files from the container  
          docker cp temp-container:/usr/src/app/out ./out
          # Clean up
          docker rm temp-container
          # Verify extracted files
          ls -la ./out
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next
          
      - name: Upload artifact for deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job (only on master/main branch)
  deploy:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Optional: Build production Docker image for containerized deployment
  build-production-image:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build production Docker image with Nginx
        run: |
          docker build --target nginx -t youtube-clone:prod .
          
      - name: Test production image
        run: |
          # Start the container in detached mode
          docker run -d --name test-prod -p 8080:80 youtube-clone:prod
          # Wait a moment for the server to start
          sleep 5
          # Test if the server is responding
          curl -f http://localhost:8080 || exit 1
          # Clean up
          docker stop test-prod
          docker rm test-prod
          
      # You can add steps here to push to a Docker registry if needed
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # 
      # - name: Push to Docker Hub
      #   run: |
      #     docker tag youtube-clone:prod yourusername/youtube-clone:latest
      #     docker push yourusername/youtube-clone:latest
